// This file is @generated by prost-build.
/// Defines the schedule for execution
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Schedule {
    /// Name of schedule
    #[prost(string, tag = "1")]
    pub name: ::prost::alloc::string::String,
    /// Period in blocks
    #[prost(uint64, tag = "2")]
    pub period: u64,
    /// Msgs that will be executed every certain number of blocks, specified in the `period` field
    #[prost(message, repeated, tag = "3")]
    pub msgs: ::prost::alloc::vec::Vec<MsgExecuteContract>,
    /// Last execution's block height
    #[prost(uint64, tag = "4")]
    pub last_execute_height: u64,
}
impl ::prost::Name for Schedule {
    const NAME: &'static str = "Schedule";
    const PACKAGE: &'static str = "neutron.cron.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "neutron.cron.v1.Schedule".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/neutron.cron.v1.Schedule".into()
    }
}
/// Defines the contract and the message to pass
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct MsgExecuteContract {
    /// The address of the smart contract
    #[prost(string, tag = "1")]
    pub contract: ::prost::alloc::string::String,
    /// JSON encoded message to be passed to the contract
    #[prost(string, tag = "2")]
    pub msg: ::prost::alloc::string::String,
}
impl ::prost::Name for MsgExecuteContract {
    const NAME: &'static str = "MsgExecuteContract";
    const PACKAGE: &'static str = "neutron.cron.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "neutron.cron.v1.MsgExecuteContract".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/neutron.cron.v1.MsgExecuteContract".into()
    }
}
/// Defines the number of current schedules
#[derive(Clone, Copy, PartialEq, Eq, Hash, ::prost::Message)]
pub struct ScheduleCount {
    /// The number of current schedules
    #[prost(int32, tag = "1")]
    pub count: i32,
}
impl ::prost::Name for ScheduleCount {
    const NAME: &'static str = "ScheduleCount";
    const PACKAGE: &'static str = "neutron.cron.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "neutron.cron.v1.ScheduleCount".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/neutron.cron.v1.ScheduleCount".into()
    }
}
